# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'seti2.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import threading
import time

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QThread, pyqtSignal
from PyQt5.QtCore import QMutex, QMutexLocker
from PyQt5.QtWidgets import QFileDialog

from lab2_client import Client

class WorkerThread(QThread):
    response_received = pyqtSignal(str)

    def __init__(self, client):
        super(WorkerThread, self).__init__()
        self.client = client

    def run(self):
        while True:
            response = self.client.receive_response()
            self.response_received.emit(response)

class Ui_MainWindow(object):
    def __init__(self):
        # Инициализируем client как атрибут класса
        self.client = None
        self.worker_thread = None
        self.mutex = QMutex()

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(819, 485)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.request_text = QtWidgets.QTextEdit(self.centralwidget)
        self.request_text.setGeometry(QtCore.QRect(20, 140, 631, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.request_text.setFont(font)
        self.request_text.setObjectName("request_text")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(40, 100, 81, 31))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.sendButton = QtWidgets.QPushButton(self.centralwidget)
        self.sendButton.setGeometry(QtCore.QRect(662, 140, 131, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.sendButton.setFont(font)
        self.sendButton.setObjectName("sendButton")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(40, 200, 81, 31))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.response_text = QtWidgets.QTextEdit(self.centralwidget)
        self.response_text.setGeometry(QtCore.QRect(20, 230, 761, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.response_text.setFont(font)
        self.response_text.setObjectName("response_text")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(30, 330, 271, 31))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.helloButton = QtWidgets.QPushButton(self.centralwidget)
        self.helloButton.setGeometry(QtCore.QRect(30, 370, 131, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.helloButton.setFont(font)
        self.helloButton.setObjectName("helloButton")
        self.byeButton = QtWidgets.QPushButton(self.centralwidget)
        self.byeButton.setGeometry(QtCore.QRect(170, 370, 131, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.byeButton.setFont(font)
        self.byeButton.setObjectName("byeButton")
        self.encryptButton = QtWidgets.QPushButton(self.centralwidget)
        self.encryptButton.setGeometry(QtCore.QRect(310, 370, 131, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.encryptButton.setFont(font)
        self.encryptButton.setObjectName("encryptButton")
        self.decryptButton = QtWidgets.QPushButton(self.centralwidget)
        self.decryptButton.setGeometry(QtCore.QRect(450, 370, 131, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.decryptButton.setFont(font)
        self.decryptButton.setObjectName("decryptButton")
        self.fileButton = QtWidgets.QPushButton(self.centralwidget)
        self.fileButton.setGeometry(QtCore.QRect(590, 370, 201, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.fileButton.setFont(font)
        self.fileButton.setObjectName("fileButton")
        self.host_text = QtWidgets.QTextEdit(self.centralwidget)
        self.host_text.setGeometry(QtCore.QRect(30, 20, 431, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.host_text.setFont(font)
        self.host_text.setObjectName("host_text")
        self.port_text = QtWidgets.QTextEdit(self.centralwidget)
        self.port_text.setGeometry(QtCore.QRect(480, 20, 111, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.port_text.setFont(font)
        self.port_text.setObjectName("port_text")
        self.connect_button = QtWidgets.QPushButton(self.centralwidget)
        self.connect_button.setGeometry(QtCore.QRect(620, 20, 181, 51))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.connect_button.setFont(font)
        self.connect_button.setObjectName("connect_button")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.connect_button.clicked.connect(self.connect)
        self.sendButton.clicked.connect(self.send_command)
        self.fileButton.clicked.connect(self.load_sequence)

        self.helloButton.clicked.connect(lambda: self.paste_command("hello"))
        self.byeButton.clicked.connect(lambda: self.paste_command("bye"))
        self.encryptButton.clicked.connect(lambda: self.paste_command("encrypt"))
        self.decryptButton.clicked.connect(lambda: self.paste_command("decrypt"))


        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "Запрос"))
        self.sendButton.setText(_translate("MainWindow", "Отправить"))
        self.label_2.setText(_translate("MainWindow", "Ответ"))
        self.label_3.setText(_translate("MainWindow", "Вспомогательные кнопки"))
        self.helloButton.setText(_translate("MainWindow", "hello"))
        self.byeButton.setText(_translate("MainWindow", "bye"))
        self.encryptButton.setText(_translate("MainWindow", "encrypt"))
        self.decryptButton.setText(_translate("MainWindow", "decrypt"))
        self.fileButton.setText(_translate("MainWindow", "Выбрать файл"))
        self.host_text.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:14pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">127.0.0.1</p></body></html>"))
        self.host_text.setPlaceholderText(_translate("MainWindow", "host"))
        self.port_text.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:14pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">12345</p></body></html>"))
        self.port_text.setPlaceholderText(_translate("MainWindow", "port"))
        self.connect_button.setText(_translate("MainWindow", "Подключиться"))



    def connect(self):
        host = self.host_text.toPlainText()
        port = int(self.port_text.toPlainText())
        self.client = Client(host, port)

        # После установки соединения, запустите поток
        self.worker_thread = WorkerThread(self.client)
        self.worker_thread.response_received.connect(self.handle_response)
        self.worker_thread.start()

    def send_command(self):
        command = self.request_text.toPlainText()
        command.lower()
        arguments = command.split()
        if (command.startswith("encrypt") or command.startswith("decrypt")) and len(arguments) == 3:

            locker = QMutexLocker(self.mutex)
            self.client.send_file_with_command(arguments[1], arguments[2])
            locker.unlock()
        else:
            self.client.send_command(command)

    def handle_response(self, response):
        self.response_text.setText(response)

    def paste_command(self, command):
        self.request_text.setText(command + " ")

    def load_sequence(self):
        options = QFileDialog.Options()
        options |= QFileDialog.ReadOnly

        # Открываем файловый диалог для выбора файла
        file_dialog = QFileDialog()
        file_paths, _ = file_dialog.getOpenFileNames(None, "Выберите файл", "", "Текстовые файлы (*.txt);;Все файлы (*)", options=options)

        if file_paths:
            # Выбран хотя бы один файл
            file_path = file_paths[0]
            print(file_path)
            request = self.request_text.toPlainText() + file_path
            self.request_text.setText(request)

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
